list: user.staticPrompt
# Voice: Stakeholders and why they care
#
-

Prompt Librarian: Prevents alias overlap; enforces clear directionality and deterministic “Return only …”.
# - Power User: Gains stable, terse suffixes and predictable behavior across workflows.
# - Facilitator/Team Lead: Ensures consistent semantics between FOG/DIG/ONG for reuse.
# - Developer/Automator: Benefits from stable names and minimal diffs for automation safety.
# Tone: Concise, operational, systems-minded
# Audience: Windsurf/Talon prompt library maintainers (power users)
# Purpose: Apply reclassifications, clarify process verbs, keep emoji variants distinct, flag minimal fixes.

# Action: Cluster, reclassify, update verbs; preserve emoji variants as distinct; minimal diffs.

# Clusters (intent/directionality)
# - FOG: Overview/abstraction; high-level; shorter outputs.
# - ONG: Forward transform; same substance; formatting/structure/tone; deterministic.
# - ROG: Reverse/offbeat; invert/undo/surprise; same substance.
# - DIG: Detail/specificity; expand; compare; concrete info.
# - TAP: Quick probe; short interactions to explore/triage.
# - JOG: Neutral reshaping; lateral; non-directional.

# FOG (overview/summary; high-level; shorter)
fog: Elevate abstraction; provide a high‑level summary.
emoji fog: Return only emoji; multiple options.
describe fog: Describe the content.
abstract fog: Generalize the text.
explain fog: Provide a detailed explanation.
objectivity fog: Assess objectivity with examples.
undefined fog: List undefined terms only.
critique fog: Critique: what’s wrong with the text.
style fog: Describe style instructions with one example.
whole fog: Parts‑to‑whole; complete entity description without adding new facts.
groups fog: Group into labeled categories; results only.
commit fog: Conventional commit message for staged changes.
dependencies fog: List dependencies and what they depend on.
how to fog: Quick plan to solve today’s problem.
process fog: Identify process flow; flow only.
table fog: Convert raw markdown lines to a markdown table (one row per line).
bullets fog: Headings with bullets; preserve top citations; remove redundancy only.
outline fog: 3–5 section outline only.

# ONG (forward; same substance; formatting/organization/tone-only; deterministic)
joined ong: Merge into one coherent part; remove redundancy; single output only.
split ong: Separate topics into clear sections; reformatted text only.
short ong: Shorten; preserve meaning; modified text only.
flat ong: One cohesive paragraph; paragraph only.
clear ong: Add necessary context and fix grammar; modified text only; no questions.
fix ong: Fix grammar only; keep meaning/tone; modified text only.
match ong: Rewrite to match provided style; modified text only.
emoji ong: Return one appropriate emoji only.

# ROG (reverse/offbeat; same substance, inverted or unexpected)
rog: Infer the likely prompt that produced this response.
questions rog: Generate open‑ended questions only.
clusters rog: Table of subtle differences among similar ideas; omit singletons; width ≤ 100 chars.
metrics rog: List metrics with concrete examples.
retro rog: Group reflection approach; what to do.
shuffled rog: Rebucket into single‑idea categories; avoid AND/OR; same language.
mini retro rog: Sub‑5‑minute reflection; 1–2 steps.
gherkin rog: Reformat into proper Gherkin using Jira markup; modified text only.

# DIG (lower‑level; add specifics; expand detail/format)
dig: Make more specific; add useful details for the given situation.
compare dig: "You will find two items below. Carefully compare them. List all the differences and similarities, providing detailed explanations for each. Highlight any subtle distinctions and commonalities. The first item is this: \n\"\"\"\n{additional_source}\n\"\"\"\n The second item follows."
bridge dig: "Guide me to achieve the desired situation: {additional_source}, starting from the current state. The current situation is described below."
emoji dig: Add emoji to improve scanability in appropriate places.
diagram dig: Convert plain text to mermaid diagram syntax.
system dig: Convert to mermaid emphasizing loops and dynamics.
HTML dig: Semantic HTML only.
parts dig: Whole‑to‑parts: list elements only.
context dig: Add LLM‑ready context; context only.
math dig: Convert to mathematical form.
blend dig: "Im going to give you some source text and destination text, and I want you to modify the destination text based on the contents of the source text in a way that combines both of them together. Use the structure of the destination text, reordering and renaming as necessary to ensure a natural and coherent flow. Return only the final text with no decoration for insertion into a document in the specified language. Here is the destination text: \"\"\"\n {additional_source} \n\"\"\" The source text follows."


# TAP (quick exploratory; immediate feedback)
tap: 3–5 good uses tailored to the input for LLM interaction.
knowledge tap: 3–5 relevant knowledge fields.
audience tap: 3–5 possible audiences.
tone tap: 3–5 possible tones.

# JOG (non‑directional; neutral reshaping; lateral)
jog: Infer what to do with this and do it. I cannot respond to any questions.

# Minimal additional fixes flagged
# - Reclassified: diagram/system to DIG (they add structural specificity); HTML to DIG; gherkin/metrics/retro/mini retro to ROG (reverse/offbeat framing).
# - Clarified determinism: “Return only …” retained for emoji fog/ong and heading/outline/todo classes.
# - Preserved emoji variants as distinct: emoji fog, emoji dig, emoji ong.
# - Avoided breaking semantics; kept stable aliases and suffixes for automation.
