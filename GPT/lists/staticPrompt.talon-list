list: user.staticPrompt
# Voice: Stakeholders and why they care
#
-

emoji: Return only emoji.
commit: Conventional commit message for staged changes.
flow: Explain the flow. Keep this descriptive, not problem-solving.
diagram: Convert plain text to mermaid diagram syntax. Infer the best diagram type. Remember that mermaid diagrams do not allow parentheses.
describe: Just describe this objectively. Do not offer suggestions, solutions, or recommendations.
math: Consider fields of mathematics that apply to this to frame your response and tell me which you are using:
clear: Remove all jargon and complex language.
todo: Format as a todo list.
assumption: What are the assumptions behind this?
value: What is the user value of this?
gherkin: Reformat into proper Gherkin using Jira markup; modified text only.
team: Tell me about the team structure. Just talk about the people and their roles.
questions: Generate open‑ended questions only.
recipe: Represent this as a recipe using a custom language. Include a key for how to understand the language. Do not offer suggestions, solutions, or recommendations.
challenge: Challenge this with questions so we can make it better.
product: Frame this through a product lens.
metrics: List metrics that result in these outcomes with concrete examples.
retro: Help me introspect / reflect on this.
objectivity: Assess objectivity with examples.
structure: Describe the structure of the whole input. Do not offer suggestions, solutions, or recommendations.
relation: Invert this so it focuses on the relationships between things. Describe those relationships. Do not offer suggestions, solutions, or recommendations.
style: Describe style instructions with one example.
critique: This looks bad. What is wrong with it?
wasinawa: I want you to help me with doing a what, so what, now what analysis. For the following ask those three questions and give me your answers. What refers to what happened. So what refers to what is important about what happened. Now what refers to what should we do about what happened.
silly: I want you to say something silly about this.
problem: I want help with abstraction laddering. I have given you a problem. I want you to make a list with that in the middle. In the item above, list three answers to the question why is this a problem?. In the item below, list three answers to the question what problems does this cause?. Order the answers in decreasing importance to the audience.
science: Give me testable, relevant, and specific hypotheses.
experiment: I have given you a problem. Suggest one or more experiments that I can try to solve it.
bud: Consider concepts such as addition or subtraction (etc) and pick one consistent angle for your response that fits. Apply those concepts in a non-numerical way to this.
drum: Consider concepts such as multiplication or division (etc) and pick one consistent angle for your response that fits. Apply those concepts in a non-numerical way to this.
dub: Consider concepts such as powers or roots (etc) and pick one consistent angle for your response that fits. Apply those concepts in a non-numerical way to this.
grove: Consider concepts such as integrals or derivatives (etc) and pick one consistent angle for your response that fits. Apply those concepts in a non-numerical way to this.
boom: Consider concepts such as limits or continuity (etc) and pick one consistent angle for your response that fits. Apply those concepts in a non-numerical way to this.
meld: Apply set theory to this and pick one consistent angle for your response that fits. Apply those concepts in a non-numerical way to this.
graph: Consider concepts such as trees or graphs (etc) and pick one consistent angle for your response that fits. Apply those concepts in a non-numerical way to this.
order: Consider concepts such as partial orders or lattices (etc) and pick one consistent angle for your response that fits. Apply those concepts in a non-numerical way to this.
probability: Consider concepts such as distributions or probabilities (etc) and pick one consistent angle for your response that fits. Apply those concepts in a non-numerical way to this.
recurrence: Calculate the (mathematical) recurrence relation of this idea; explain the consequences in plain language.
join: Merge into one coherent part; remove redundancy;
pain: List 3-5 pain points; issues; problems; obstacles; challenges; barriers. Order by importance to the audience.
done: What is the definition of done for this?
group: Group into labeled categories; results only.
shuffled: Reconstruct the following text to ensure the layout is logical and significantly different from the original. Create new categories, each representing a single idea without using conjunctions like AND or OR. Present the revised text in the same language.
split: Separate topics into clear sections; reformatted text only.
short: Shorten; preserve meaning; modified text only.
sort: Sort these items in order of importance to the audience.
fix: Fix grammar only; keep meaning/tone; modified text only.
match: Rewrite to match provided style; modified text only.
blend: "Im going to give you some source text and destination text, and I want you to modify the destination text based on the contents of the source text in a way that combines both of them together. Use the structure of the destination text, reordering and renaming as necessary to ensure a natural and coherent flow. Return only the final text with no decoration for insertion into a document in the specified language. Here is the destination text: \"\"\"\n {additional_source} \n\"\"\" The source text follows."
mod: Modulo the first idea by the second idea but not in a numerical sense.
map: Use data mapping / transformation concepts to describe the transformation.
clusters: Table of subtle differences among similar ideas; omit singletons; width ≤ 100 chars.
bridge: "Guide me to achieve the desired situation: {additional_source}, starting from the current state. The current situation is described below."
compare: "You will find two items below. Carefully compare them. List all the differences and similarities, providing detailed explanations for each. Highlight any subtle distinctions and commonalities. The first item is this: \n\"\"\"\n{additional_source}\n\"\"\"\n The second item follows."
invert: Invert this so it is still true focuses on the things that were `negative space` in the original. Im not looking for a literal inversion but rather metaphorical one.
reflection: Calculate the reflection of this but not in a numerical sense.
rotation: Calculate the 90 degree rotation of this but not in a numerical sense.
dimension: Expand the dimensions (geometric) of this. For each axis explain of the scale of the dimension.
HTML: Semantic HTML only.
type: Represent this as a type or taxonomy.
format: Add appropriate formatting leveraging commands available in the context (slack, markdown, etc) to the text.
simple: Rewrite this in a simpler way.
context: Add LLM‑ready context; context only.
easier: This is too much work. Give me something that I can accomplish in a smaller timescale.
knowledge: Consider academic or industry Fields of Knowledge you know about that apply to this to frame your response and tell me which you are using:
why: Explain why. Limit the number of reasons based on the human short term memory capacity. Keep this descriptive, not problem-solving.
how: Explain how. Limit the number of steps based on the human short term memory capacity. Keep this descriptive, not problem-solving.
who: Explain who. Limit the number of actors based on the human short term memory capacity. Keep this descriptive, not problem-solving.
what: Explain what. Limit the number of items based on the human short term memory capacity. Keep this descriptive, not problem-solving.
when: Explain when. Limit the number of timeframes based on the human short term memory capacity. Keep this descriptive, not problem-solving.
where: Explain where. Limit the number of locations based on the human short term memory capacity. Keep this descriptive, not problem-solving.
shell: Write a shell script.
ADR: Write an ADR.
operations: Infer an appropriate Operations Research (management science) or operations theory mathematical concept to apply.
undefined: List undefined terms only.
dependency: List dependencies and what they depend on.
how to: Quick plan to solve today’s problem.
question: Ask open ended questions about this that are important to the audience.
lens: Given the input, create an abstract visualization that avoids diagrams or maps entirely, expressing the big picture as a loose metaphorical form (consider the input and invent an effective concept) that highlights contrasts, intensities, and points of interest, provides simple anchors for reference, and a short legend for orientation while leaving room for exploration. The output should be an SVG or code that can be run. Give instructions to view if any additional steps are required.
